{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(router) {\n    this.router = router;\n  }\n  canActivate(next, state) {\n    if (state) {\n      let usrAvlb = localStorage.getItem('user');\n      if (usrAvlb) {\n        this.loggedIn = true;\n      }\n    }\n    // or false get you logged in status from state  \n    if (this.loggedIn) {\n      return true;\n    }\n    this.router.navigate([\"/login\"]);\n    return false;\n  }\n  canActivateChild(next, state) {\n    return this.canActivate(next, state);\n  }\n  static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,SAAS;EAElBC,YACYC,MAAc;IAAd,WAAM,GAANA,MAAM;EAClB;EACAC,WAAW,CACPC,IAA4B,EAC5BC,KAA0B;IAC1B,IAAIA,KAAK,EAAE;MACP,IAAIC,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MAC1C,IAAIF,OAAO,EAAE;QACT,IAAI,CAACG,QAAQ,GAAG,IAAI;;;IAG5B;IACA,IAAI,IAAI,CAACA,QAAQ,EAAE;MACf,OAAO,IAAI;;IAEf,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAChC,OAAO,KAAK;EAChB;EACAC,gBAAgB,CACZP,IAA4B,EAC5BC,KAA0B;IAC1B,OAAO,IAAI,CAACF,WAAW,CAACC,IAAI,EAAEC,KAAK,CAAC;EACxC;EAAC;qBAzBQL,SAAS;EAAA;EAAA;WAATA,SAAS;IAAAY,SAATZ,SAAS;IAAAa,YAHN;EAAM","names":["AuthGuard","constructor","router","canActivate","next","state","usrAvlb","localStorage","getItem","loggedIn","navigate","canActivateChild","factory","providedIn"],"sourceRoot":"","sources":["D:\\sru\\mywork\\vidlocaleapp - Copy\\src\\app\\services\\auth-guard.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from \"@angular/router\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class AuthGuard {\r\n    loggedIn: any;\r\n    constructor(\r\n        private router: Router) {\r\n    }\r\n    canActivate(\r\n        next: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot): boolean {\r\n        if (state) {\r\n            let usrAvlb = localStorage.getItem('user');\r\n            if (usrAvlb) {\r\n                this.loggedIn = true;\r\n            }\r\n        }\r\n        // or false get you logged in status from state  \r\n        if (this.loggedIn) {\r\n            return true;\r\n        }\r\n        this.router.navigate([\"/login\"]);\r\n        return false;\r\n    }\r\n    canActivateChild(\r\n        next: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot): boolean {\r\n        return this.canActivate(next, state);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}