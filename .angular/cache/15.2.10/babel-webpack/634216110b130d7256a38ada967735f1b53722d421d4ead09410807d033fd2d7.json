{"ast":null,"code":"import { NavigationEnd } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class NavService {\n  constructor(router) {\n    this.router = router;\n    this.currentUrl = new BehaviorSubject(undefined);\n    this.approvalStageMessage = new BehaviorSubject('Basic Approval is required!');\n    this.currentApprovalStageMessage = this.approvalStageMessage.asObservable();\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        this.currentUrl.next(event.urlAfterRedirects);\n      }\n    });\n  }\n  updateApprovalMessage(message) {\n    this.approvalStageMessage.next(message);\n  }\n  set viewVd(val) {\n    this.plyVd = val;\n  }\n  static #_ = this.ɵfac = function NavService_Factory(t) {\n    return new (t || NavService)(i0.ɵɵinject(i1.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NavService,\n    factory: NavService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAAgBA,aAAa,QAAgB,iBAAiB;AAC9D,SAASC,eAAe,QAAQ,MAAM;;;AAGtC,OAAM,MAAOC,UAAU;EAMnBC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;IAJnB,eAAU,GAAG,IAAIH,eAAe,CAAMI,SAAS,CAAC;IAC/C,yBAAoB,GAAG,IAAIJ,eAAe,CAAC,6BAA6B,CAAC;IACjF,gCAA2B,GAAG,IAAI,CAACK,oBAAoB,CAACC,YAAY,EAAE;IAGlE,IAAI,CAACH,MAAM,CAACI,MAAM,CAACC,SAAS,CAAEC,KAAY,IAAI;MAC1C,IAAIA,KAAK,YAAYV,aAAa,EAAE;QAChC,IAAI,CAACW,UAAU,CAACC,IAAI,CAACF,KAAK,CAACG,iBAAiB,CAAC;;IAErD,CAAC,CAAC;EACN;EAEAC,qBAAqB,CAACC,OAAe;IACjC,IAAI,CAACT,oBAAoB,CAACM,IAAI,CAACG,OAAO,CAAC;EAC3C;EAEA,IAAIC,MAAM,CAACC,GAAW;IAClB,IAAI,CAACC,KAAK,GAAGD,GAAG;EACpB;EAAC;qBApBQf,UAAU;EAAA;EAAA;WAAVA,UAAU;IAAAiB,SAAVjB,UAAU;IAAAkB,YADG;EAAM","names":["NavigationEnd","BehaviorSubject","NavService","constructor","router","undefined","approvalStageMessage","asObservable","events","subscribe","event","currentUrl","next","urlAfterRedirects","updateApprovalMessage","message","viewVd","val","plyVd","factory","providedIn"],"sourceRoot":"","sources":["D:\\sru\\mywork\\modernize-angular-free-v1\\main\\src\\app\\services\\nav.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Event, NavigationEnd, Router } from '@angular/router';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class NavService {\r\n    plyVd: any;\r\n    public currentUrl = new BehaviorSubject<any>(undefined);\r\n    private approvalStageMessage = new BehaviorSubject('Basic Approval is required!');\r\n    currentApprovalStageMessage = this.approvalStageMessage.asObservable();\r\n\r\n    constructor(private router: Router) {\r\n        this.router.events.subscribe((event: Event) => {\r\n            if (event instanceof NavigationEnd) {\r\n                this.currentUrl.next(event.urlAfterRedirects);\r\n            }\r\n        });\r\n    }\r\n\r\n    updateApprovalMessage(message: string) {\r\n        this.approvalStageMessage.next(message)\r\n    }\r\n\r\n    set viewVd(val: string){\r\n        this.plyVd = val;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}