{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/nav.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/button\";\nfunction AppSamplePageComponent_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function AppSamplePageComponent_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.goToViewPage());\n    });\n    i0.ɵɵtext(1, \" View \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AppSamplePageComponent {\n  constructor(router, navService) {\n    this.router = router;\n    this.navService = navService;\n    this.uploadedVideoFile = new EventEmitter();\n    this.showVBtn = false;\n    this.message = '';\n  }\n  ngOnInit() {}\n  onSelectFile(event) {\n    console.log(event);\n    // return;\n    const file = event.target.files && event.target.files[0];\n    if (file) {\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n      if (file.type.indexOf('image') > -1) {\n        this.format = 'image';\n      } else if (file.type.indexOf('video') > -1) {\n        this.format = 'video';\n      }\n      reader.onload = event => {\n        this.url = event.target.result;\n        this.navService.upload(file).subscribe({\n          next: event => {\n            // if (event.type === HttpEventType.UploadProgress) {\n            //   this.progress = Math.round(100 * event.loaded / event.total);\n            // } else if (event instanceof HttpResponse) {\n            //   this.message = event.body.message;\n            //   this.fileInfos = this.uploadService.getFiles();\n            // }\n          },\n          error: err => {\n            console.log(err);\n            // this.progress = 0;\n            if (err.error && err.error.message) {\n              this.message = err.error.message;\n            } else {\n              this.message = 'Could not upload the file!';\n            }\n            // this.currentFile = undefined;\n          }\n        });\n        // this.goToViewPage();\n        // this.showVBtn = true;\n      };\n    }\n  }\n\n  goToViewPage() {\n    console.log(this.url);\n    // return;\n    // this.uploadedVideoFile.emit(this.url);\n    // this.navService.viewVd.subscribe((url: any) => {\n    //   return url;\n    // });\n    this.navService.setViewVd = this.url;\n    this.router.navigate(['extra/view-video']);\n  }\n  static #_ = this.ɵfac = function AppSamplePageComponent_Factory(t) {\n    return new (t || AppSamplePageComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.NavService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppSamplePageComponent,\n    selectors: [[\"app-sample-page\"]],\n    outputs: {\n      uploadedVideoFile: \"uploadedVideoFile\"\n    },\n    decls: 9,\n    vars: 1,\n    consts: [[1, \"cardWithShadow\"], [\"mat-flat-button\", \"\", 1, \"btn\", \"btn-light\", \"file\"], [1, \"label\"], [\"type\", \"file\", \"name\", \"video\", \"accept\", \"video/*\", 3, \"change\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", 3, \"click\", 4, \"ngIf\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n    template: function AppSamplePageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"mat-card-content\")(2, \"button\", 1);\n        i0.ɵɵtext(3, \"Examinate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"label\", 2)(5, \"input\", 3);\n        i0.ɵɵlistener(\"change\", function AppSamplePageComponent_Template_input_change_5_listener($event) {\n          return ctx.onSelectFile($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"span\");\n        i0.ɵɵtext(7, \"Select a video\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(8, AppSamplePageComponent_button_8_Template, 2, 0, \"button\", 4);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.showVBtn);\n      }\n    },\n    dependencies: [i3.NgIf, i4.MatCard, i4.MatCardContent, i5.MatButton],\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAwB,eAAe;;;;;;;;;;ICYjEC,iCAAkF;IAAzBA;MAAAA;MAAA;MAAA,OAASA,oCAAc;IAAA,EAAC;IAC/EA,sBACF;IAAAA,iBAAS;;;ADNf,OAAM,MAAOC,sBAAsB;EAMjCC,YAAoBC,MAAc,EAAUC,UAAsB;IAA9C,WAAM,GAAND,MAAM;IAAkB,eAAU,GAAVC,UAAU;IAH5C,sBAAiB,GAAG,IAAIL,YAAY,EAAE;IAChD,aAAQ,GAAG,KAAK;IAChB,YAAO,GAAG,EAAE;EAC0D;EAEtEM,QAAQ,IACR;EAEAC,YAAY,CAACC,KAAU;IACrBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB;IACA,MAAMG,IAAI,GAAGH,KAAK,CAACI,MAAM,CAACC,KAAK,IAAIL,KAAK,CAACI,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAExD,IAAIF,IAAI,EAAE;MACR,IAAIG,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC7BD,MAAM,CAACE,aAAa,CAACL,IAAI,CAAC;MAC1B,IAAGA,IAAI,CAACM,IAAI,CAACC,OAAO,CAAC,OAAO,CAAC,GAAE,CAAC,CAAC,EAAC;QAChC,IAAI,CAACC,MAAM,GAAG,OAAO;OACtB,MAAM,IAAGR,IAAI,CAACM,IAAI,CAACC,OAAO,CAAC,OAAO,CAAC,GAAE,CAAC,CAAC,EAAC;QACvC,IAAI,CAACC,MAAM,GAAG,OAAO;;MAEvBL,MAAM,CAACM,MAAM,GAAIZ,KAAK,IAAI;QACxB,IAAI,CAACa,GAAG,GAAgBb,KAAK,CAACI,MAAO,CAACU,MAAM;QAC5C,IAAI,CAACjB,UAAU,CAACkB,MAAM,CAACZ,IAAI,CAAC,CAACa,SAAS,CAAC;UACrCC,IAAI,EAAGjB,KAAU,IAAI;YACnB;YACA;YACA;YACA;YACA;YACA;UAAA,CACD;UACDkB,KAAK,EAAGC,GAAQ,IAAI;YAClBlB,OAAO,CAACC,GAAG,CAACiB,GAAG,CAAC;YAChB;YAEA,IAAIA,GAAG,CAACD,KAAK,IAAIC,GAAG,CAACD,KAAK,CAACE,OAAO,EAAE;cAClC,IAAI,CAACA,OAAO,GAAGD,GAAG,CAACD,KAAK,CAACE,OAAO;aACjC,MAAM;cACL,IAAI,CAACA,OAAO,GAAG,4BAA4B;;YAG7C;UACF;SACD,CAAC;QAEF;QACA;MACF,CAAC;;EAEL;;EAEAC,YAAY;IACVpB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACW,GAAG,CAAC;IACrB;IACA;IACA;IACA;IACA;IACA,IAAI,CAAChB,UAAU,CAACyB,SAAS,GAAG,IAAI,CAACT,GAAG;IACpC,IAAI,CAACjB,MAAM,CAAC2B,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;EAC5C;EAAC;qBAhEU7B,sBAAsB;EAAA;EAAA;UAAtBA,sBAAsB;IAAA8B;IAAAC;MAAAC;IAAA;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCLnCrC,mCAAiC;QAEwBA,yBAAS;QAAAA,iBAAS;QACrEA,gCAAqB;QACaA;UAAA,OAAUsC,wBAAoB;QAAA,EAAC;QAA/DtC,iBAAkF;QAClFA,4BAAM;QAAAA,8BAAc;QAAAA,iBAAO;QAI7BA,6EAES;QAIXA,iBAAmB;;;QANwBA,eAAc;QAAdA,mCAAc","names":["EventEmitter","i0","AppSamplePageComponent","constructor","router","navService","ngOnInit","onSelectFile","event","console","log","file","target","files","reader","FileReader","readAsDataURL","type","indexOf","format","onload","url","result","upload","subscribe","next","error","err","message","goToViewPage","setViewVd","navigate","selectors","outputs","uploadedVideoFile","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\sru\\mywork\\modernize-angular-free-v1\\main\\src\\app\\pages\\extra\\sample-page\\sample-page.component.ts","D:\\sru\\mywork\\modernize-angular-free-v1\\main\\src\\app\\pages\\extra\\sample-page\\sample-page.component.html"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NavService } from 'src/app/services/nav.service';\r\n\r\n@Component({\r\n  selector: 'app-sample-page',\r\n  templateUrl: './sample-page.component.html'\r\n})\r\nexport class AppSamplePageComponent implements OnInit {\r\n  url: string | ArrayBuffer | null;\r\n  format: string;\r\n  @Output() uploadedVideoFile = new EventEmitter();\r\n  showVBtn = false;\r\n  message = '';\r\n  constructor(private router: Router, private navService: NavService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSelectFile(event: any) {\r\n    console.log(event);\r\n    // return;\r\n    const file = event.target.files && event.target.files[0];\r\n    \r\n    if (file) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      if(file.type.indexOf('image')> -1){\r\n        this.format = 'image';\r\n      } else if(file.type.indexOf('video')> -1){\r\n        this.format = 'video';\r\n      }\r\n      reader.onload = (event) => {\r\n        this.url = (<FileReader>event.target).result;\r\n        this.navService.upload(file).subscribe({\r\n          next: (event: any) => {\r\n            // if (event.type === HttpEventType.UploadProgress) {\r\n            //   this.progress = Math.round(100 * event.loaded / event.total);\r\n            // } else if (event instanceof HttpResponse) {\r\n            //   this.message = event.body.message;\r\n            //   this.fileInfos = this.uploadService.getFiles();\r\n            // }\r\n          },\r\n          error: (err: any) => {\r\n            console.log(err);\r\n            // this.progress = 0;\r\n\r\n            if (err.error && err.error.message) {\r\n              this.message = err.error.message;\r\n            } else {\r\n              this.message = 'Could not upload the file!';\r\n            }\r\n\r\n            // this.currentFile = undefined;\r\n          }\r\n        });\r\n\r\n        // this.goToViewPage();\r\n        // this.showVBtn = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  goToViewPage(){\r\n    console.log(this.url);\r\n    // return;\r\n    // this.uploadedVideoFile.emit(this.url);\r\n    // this.navService.viewVd.subscribe((url: any) => {\r\n    //   return url;\r\n    // });\r\n    this.navService.setViewVd = this.url;\r\n    this.router.navigate(['extra/view-video']);\r\n  }\r\n\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- Simple four boxes Row -->\r\n<!-- ============================================================== -->\r\n<mat-card class=\"cardWithShadow\">\r\n    <mat-card-content>\r\n      <button mat-flat-button class=\"btn btn-light file\">Examinate</button>\r\n      <label class=\"label\">\r\n        <input type='file' name=\"video\" (change)=\"onSelectFile($event)\" accept=\"video/*\"/>\r\n        <span>Select a video</span>\r\n      </label>\r\n\r\n      \r\n      <button mat-flat-button color=\"primary\" *ngIf=\"showVBtn\" (click)=\"goToViewPage()\">\r\n        View\r\n      </button>\r\n      <!-- <video [src]=\"url\" *ngIf=\"format==='video' && url\" height=\"200\" controls></video> -->\r\n      <!-- <mat-card-title>Sample Page</mat-card-title>\r\n      <mat-card-subtitle class=\"mat-body-1\">This is test page</mat-card-subtitle> -->\r\n    </mat-card-content>\r\n  </mat-card>\r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}