{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/material/card\";\nexport class AppViewVideoComponent {\n  constructor(route) {\n    this.route = route;\n    //   this.route.queryParams.subscribe(queryParams => {\n    //     console.log(queryParams);\n    //     // this.param1 = this.route.snapshot.params.url;\n    //     // this.param1 = params['url'];\n    //     // console.log(this.param1);\n    // });\n  }\n\n  ngOnInit() {\n    const firstParam = this.route.snapshot.queryParamMap.get('queryParams');\n    console.log(firstParam);\n  }\n  goToVideo(v) {\n    console.log(v);\n  }\n  static #_ = this.ɵfac = function AppViewVideoComponent_Factory(t) {\n    return new (t || AppViewVideoComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppViewVideoComponent,\n    selectors: [[\"app-view-video\"]],\n    decls: 2,\n    vars: 0,\n    consts: [[1, \"cardWithShadow\"]],\n    template: function AppViewVideoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0);\n        i0.ɵɵelement(1, \"mat-card-content\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    dependencies: [i2.MatCard, i2.MatCardContent],\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,qBAAqB;EAMhCC,YAAoBC,KAAqB;IAArB,UAAK,GAALA,KAAK;IACzB;IACA;IACA;IACA;IACA;IACA;EACA;;EAEAC,QAAQ;IACN,MAAMC,UAAU,GAAG,IAAI,CAACF,KAAK,CAACG,QAAQ,CAACC,aAAa,CAACC,GAAG,CAAC,aAAa,CAAC;IACvEC,OAAO,CAACC,GAAG,CAACL,UAAU,CAAC;EACzB;EAEAM,SAAS,CAACC,CAAM;IACdH,OAAO,CAACC,GAAG,CAACE,CAAC,CAAC;EAChB;EAAC;qBAtBUX,qBAAqB;EAAA;EAAA;UAArBA,qBAAqB;IAAAY;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCLlCC,mCAAiC;QAC7BA,mCAMmB;QACrBA,iBAAW","names":["AppViewVideoComponent","constructor","route","ngOnInit","firstParam","snapshot","queryParamMap","get","console","log","goToVideo","v","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["D:\\sru\\mywork\\modernize-angular-free-v1\\main\\src\\app\\pages\\extra\\view-video\\view-video.component.ts","D:\\sru\\mywork\\modernize-angular-free-v1\\main\\src\\app\\pages\\extra\\view-video\\view-video.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { SafeResourceUrl } from '@angular/platform-browser';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-view-video',\r\n  templateUrl: './view-video.component.html'\r\n})\r\nexport class AppViewVideoComponent implements OnInit {\r\n  // url: string | ArrayBuffer | null;\r\n  format: string;\r\n  // @Input() viewVd: any;\r\n  // urlSafe: SafeResourceUrl;\r\n  param1: any;\r\n  constructor(private route: ActivatedRoute) { \r\n  //   this.route.queryParams.subscribe(queryParams => {\r\n  //     console.log(queryParams);\r\n  //     // this.param1 = this.route.snapshot.params.url;\r\n  //     // this.param1 = params['url'];\r\n  //     // console.log(this.param1);\r\n  // });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const firstParam = this.route.snapshot.queryParamMap.get('queryParams');\r\n    console.log(firstParam);\r\n  }\r\n\r\n  goToVideo(v: any){\r\n    console.log(v);\r\n  }\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- Simple four boxes Row -->\r\n<!-- ============================================================== -->\r\n<mat-card class=\"cardWithShadow\">\r\n    <mat-card-content>\r\n      <!-- <video [src]=\"url\" height=\"200\" controls></video> -->\r\n      <!-- <iframe width=\"100%\" height=\"1000\" frameBorder=\"0\" [src]=\"url\"></iframe> -->\r\n      <!-- <mat-card-title>Sample Page</mat-card-title>\r\n      <mat-card-subtitle class=\"mat-body-1\">This is test page</mat-card-subtitle> -->\r\n      <!-- <app-sample-page (uploadedVideoFile)=\"goToVideo($event)\"></app-sample-page> -->\r\n    </mat-card-content>\r\n  </mat-card>\r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}