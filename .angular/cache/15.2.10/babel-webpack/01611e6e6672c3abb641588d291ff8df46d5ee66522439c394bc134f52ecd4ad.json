{"ast":null,"code":"import { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/snack-bar\";\nimport * as i2 from \"src/app/services/nav.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/forms\";\nexport class AppSideLoginComponent {\n  constructor(_snackBar, navService, router) {\n    this._snackBar = _snackBar;\n    this.navService = navService;\n    this.router = router;\n    this.horizontalPosition = 'end';\n    this.verticalPosition = 'top';\n    this.loginFn = new Subject();\n  }\n  ngOnInit() {}\n  gotoVdPg() {\n    console.log(this.usrNm);\n    console.log(this.pwd);\n    if (this.usrNm === undefined || this.usrNm === '' || this.usrNm === ' ') {\n      this._snackBar.open(\"Please enter username\", \"Close\", {\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition,\n        duration: 1500\n      });\n    } else if (this.pwd === undefined || this.pwd === '' || this.pwd === ' ') {\n      this._snackBar.open(\"Please enter password\", \"Close\", {\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition,\n        duration: 1500\n      });\n    } else {\n      this.navService.getLoginDtls().pipe(takeUntil(this.loginFn)).subscribe(res => {\n        console.log(res);\n        console.log(\"in res\");\n        let lgn_dtls = res;\n        console.log(lgn_dtls);\n        if (lgn_dtls) {\n          if (this.usrNm === lgn_dtls.username && this.pwd === lgn_dtls.password) {\n            console.log(\"login\");\n            let usrDtls = {\n              usr: lgn_dtls.username,\n              pwd: lgn_dtls.password\n            };\n            localStorage.setItem('user', usrDtls);\n            this.router.navigateByUrl(\"/main/upload-video\");\n          } else {\n            this._snackBar.open(\"Please enter a valid username and password\", \"Close\", {\n              horizontalPosition: this.horizontalPosition,\n              verticalPosition: this.verticalPosition,\n              duration: 5500\n            });\n          }\n        }\n      });\n    }\n  }\n  ngOnDestroy() {\n    this.loginFn.next(true);\n    this.loginFn.complete();\n  }\n  static #_ = this.ɵfac = function AppSideLoginComponent_Factory(t) {\n    return new (t || AppSideLoginComponent)(i0.ɵɵdirectiveInject(i1.MatSnackBar), i0.ɵɵdirectiveInject(i2.NavService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppSideLoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 18,\n    vars: 2,\n    consts: [[1, \"blank-layout-container\", \"justify-content-center\", \"align-items-center\", \"bg-light-primary\"], [1, \"position-relative\", \"login\", \"row\", \"w-100\", \"h-100\", \"bg-gredient\", \"justify-content-center\"], [1, \"col-lg-4\", \"d-flex\", \"align-items-center\"], [1, \"cardWithShadow\", \"boxed-auth\"], [1, \"p-32\"], [1, \"text-center\"], [\"src\", \"./assets/images/logos/logo.png\", \"alt\", \"logo\", 1, \"align-middle\", \"m-2\"], [1, \"mat-subtitle-2\", \"f-s-14\", \"f-w-600\", \"m-b-12\", \"d-block\"], [\"appearance\", \"outline\", \"color\", \"primary\", 1, \"w-100\"], [\"matInput\", \"\", \"placeholder\", \"Enter Username\", \"name\", \"usrNm\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Enter Password\", \"name\", \"pwd\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", 1, \"w-100\", 3, \"click\"]],\n    template: function AppSideLoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"mat-card\", 3)(4, \"mat-card-content\", 4)(5, \"div\", 5);\n        i0.ɵɵelement(6, \"img\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"form\")(8, \"mat-label\", 7);\n        i0.ɵɵtext(9, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-form-field\", 8)(11, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function AppSideLoginComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.usrNm = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"mat-label\", 7);\n        i0.ɵɵtext(13, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-form-field\", 8)(15, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function AppSideLoginComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.pwd = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function AppSideLoginComponent_Template_button_click_16_listener() {\n          return ctx.gotoVdPg();\n        });\n        i0.ɵɵtext(17, \" Sign In \");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngModel\", ctx.usrNm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.pwd);\n      }\n    },\n    dependencies: [i4.MatCard, i4.MatCardContent, i5.MatInput, i6.MatFormField, i6.MatLabel, i7.MatButton, i8.ɵNgNoValidate, i8.DefaultValueAccessor, i8.NgControlStatus, i8.NgControlStatusGroup, i8.NgModel, i8.NgForm],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}","map":{"version":3,"mappings":"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","names":["takeUntil","Subject","AppSideLoginComponent","constructor","_snackBar","navService","router","ngOnInit","gotoVdPg","console","log","usrNm","pwd","undefined","open","horizontalPosition","verticalPosition","duration","getLoginDtls","pipe","loginFn","subscribe","res","lgn_dtls","username","password","usrDtls","usr","localStorage","setItem","navigateByUrl","ngOnDestroy","next","complete","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\sru\\mywork\\vidlocaleapp\\src\\app\\pages\\authentication\\login\\login.component.ts","D:\\sru\\mywork\\vidlocaleapp\\src\\app\\pages\\authentication\\login\\login.component.html"],"sourcesContent":["import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport {MatSnackBar, MatSnackBarHorizontalPosition, MatSnackBarVerticalPosition} from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { NavService } from 'src/app/services/nav.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AppSideLoginComponent {\r\n  usrNm: any;\r\n  pwd: any;\r\n  horizontalPosition: MatSnackBarHorizontalPosition = 'end';\r\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\r\n  loginFn: Subject<boolean> = new Subject();\r\n  constructor(private _snackBar: MatSnackBar, private navService: NavService, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n  gotoVdPg() {\r\n    console.log(this.usrNm);\r\n    console.log(this.pwd);\r\n    if (this.usrNm === undefined || this.usrNm === '' || this.usrNm === ' ') {\r\n      this._snackBar.open(\"Please enter username\", \"Close\", {\r\n        horizontalPosition: this.horizontalPosition,\r\n        verticalPosition: this.verticalPosition,\r\n        duration: 1500\r\n      });\r\n    } else if (this.pwd === undefined || this.pwd === '' || this.pwd === ' ') {\r\n      this._snackBar.open(\"Please enter password\", \"Close\", {\r\n        horizontalPosition: this.horizontalPosition,\r\n        verticalPosition: this.verticalPosition,\r\n        duration: 1500\r\n      });\r\n    } else {\r\n      this.navService.getLoginDtls().\r\n      pipe(takeUntil(this.loginFn)).subscribe((res) => {\r\n        console.log(res);\r\n        console.log(\"in res\");\r\n        let lgn_dtls = res;\r\n        console.log(lgn_dtls);\r\n        if(lgn_dtls){\r\n          if(this.usrNm === lgn_dtls.username && this.pwd === lgn_dtls.password){\r\n            console.log(\"login\");\r\n            let usrDtls: any = {usr: lgn_dtls.username, pwd: lgn_dtls.password}\r\n            localStorage.setItem('user', usrDtls);\r\n            this.router.navigateByUrl(\"/main/upload-video\");\r\n          } else {\r\n            this._snackBar.open(\"Please enter a valid username and password\", \"Close\", {\r\n              horizontalPosition: this.horizontalPosition,\r\n              verticalPosition: this.verticalPosition,\r\n              duration: 5500\r\n            });\r\n          }\r\n        }\r\n        \r\n      })\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n      this.loginFn.next(true);\r\n      this.loginFn.complete();\r\n  }\r\n}\r\n","<div class=\"blank-layout-container justify-content-center align-items-center bg-light-primary\">\r\n  <div\r\n    class=\"position-relative login row w-100 h-100 bg-gredient justify-content-center\"\r\n  >\r\n    <div class=\"col-lg-4 d-flex align-items-center\">\r\n      <mat-card class=\"cardWithShadow boxed-auth\">\r\n        <mat-card-content class=\"p-32\">\r\n          <div class=\"text-center\">\r\n            <img\r\n                src=\"./assets/images/logos/logo.png\"\r\n                class=\"align-middle m-2\"\r\n                alt=\"logo\"\r\n              />\r\n          </div>\r\n          <form >\r\n            <mat-label class=\"mat-subtitle-2 f-s-14 f-w-600 m-b-12 d-block\"\r\n              >Username</mat-label\r\n            >\r\n            <mat-form-field appearance=\"outline\" class=\"w-100\" color=\"primary\">\r\n              <input matInput [(ngModel)]=\"usrNm\" placeholder=\"Enter Username\" name=\"usrNm\"/>\r\n            </mat-form-field>\r\n            <!-- password -->\r\n            <mat-label class=\"mat-subtitle-2 f-s-14 f-w-600 m-b-12 d-block\"\r\n              >Password</mat-label\r\n            >\r\n            <mat-form-field appearance=\"outline\" class=\"w-100\" color=\"primary\">\r\n              <input matInput type=\"password\" [(ngModel)]=\"pwd\" placeholder=\"Enter Password\" name=\"pwd\"/>\r\n            </mat-form-field>\r\n            <!-- [routerLink]=\"['/extra/sample-page']\" -->\r\n            <button  mat-flat-button color=\"primary\" class=\"w-100\" (click)=\"gotoVdPg()\">\r\n              Sign In\r\n            </button>\r\n            <!-- input -->\r\n          </form>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}