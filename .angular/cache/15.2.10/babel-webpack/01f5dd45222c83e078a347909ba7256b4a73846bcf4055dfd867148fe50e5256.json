{"ast":null,"code":"import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { moveItemInArray } from '@angular/cdk/drag-drop';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/form-field\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/material/chips\";\nimport * as i5 from \"@angular/material/icon\";\nfunction AppChipsComponent_mat_chip_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-chip\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const vegetable_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", vegetable_r4.name, \" \");\n  }\n}\nfunction AppChipsComponent_mat_chip_option_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-chip-option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const chip_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"color\", chip_r5.color);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", chip_r5.name, \" \");\n  }\n}\nfunction AppChipsComponent_mat_chip_row_64_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip-row\", 28);\n    i0.ɵɵlistener(\"removed\", function AppChipsComponent_mat_chip_row_64_Template_mat_chip_row_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const fruit_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.remove(fruit_r6));\n    })(\"edited\", function AppChipsComponent_mat_chip_row_64_Template_mat_chip_row_edited_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const fruit_r6 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.edit(fruit_r6, $event));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 29)(3, \"mat-icon\");\n    i0.ɵɵtext(4, \"cancel\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const fruit_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"editable\", true)(\"aria-description\", \"press enter to edit \" + fruit_r6.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", fruit_r6.name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"aria-label\", \"remove \" + fruit_r6.name);\n  }\n}\nexport class AppChipsComponent {\n  constructor() {\n    // drag n drop\n    this.vegetables = [{\n      name: 'apple'\n    }, {\n      name: 'banana'\n    }, {\n      name: 'strawberry'\n    }, {\n      name: 'orange'\n    }, {\n      name: 'kiwi'\n    }, {\n      name: 'cherry'\n    }];\n    // \n    // Stacked\n    // \n    this.availableColors = [{\n      name: 'Primary',\n      color: 'primary'\n    }, {\n      name: 'Accent',\n      color: 'accent'\n    }, {\n      name: 'Warn',\n      color: 'warn'\n    }];\n    // \n    //  chips with input\n    // \n    this.addOnBlur = true;\n    this.separatorKeysCodes = [ENTER, COMMA];\n    this.fruits = [{\n      name: 'Lemon'\n    }, {\n      name: 'Lime'\n    }, {\n      name: 'Apple'\n    }];\n  }\n  drop(event) {\n    if (isDragDrop(event)) {\n      moveItemInArray(this.vegetables, event.previousIndex, event.currentIndex);\n    }\n  }\n  add(event) {\n    const value = (event.value || '').trim();\n    // Add our fruit\n    if (value) {\n      this.fruits.push({\n        name: value\n      });\n    }\n    // Clear the input value\n    event.chipInput.clear();\n  }\n  remove(fruit) {\n    const index = this.fruits.indexOf(fruit);\n    if (index >= 0) {\n      this.fruits.splice(index, 1);\n    }\n  }\n  edit(fruit, event) {\n    const value = event.value.trim();\n    // Remove fruit if it no longer has a name\n    if (!value) {\n      this.remove(fruit);\n      return;\n    }\n    // Edit existing fruit\n    const index = this.fruits.indexOf(fruit);\n    if (index >= 0) {\n      this.fruits[index].name = value;\n    }\n  }\n  static #_ = this.ɵfac = function AppChipsComponent_Factory(t) {\n    return new (t || AppChipsComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppChipsComponent,\n    selectors: [[\"app-chips\"]],\n    decls: 66,\n    vars: 6,\n    consts: [[1, \"cardWithShadow\", \"theme-card\"], [1, \"m-b-0\"], [1, \"b-t-1\"], [1, \"row\"], [1, \"col-lg-6\"], [1, \"b-1\", \"shadow-none\"], [\"aria-label\", \"Fish selection\"], [\"color\", \"primary\", 1, \"f-s-14\"], [1, \"f-s-14\"], [\"color\", \"accent\", \"selected\", \"\", 1, \"f-s-14\"], [\"color\", \"warn\", 1, \"f-s-14\"], [\"aria-label\", \"Dog selection\"], [\"matChipAvatar\", \"\", \"src\", \"/assets/images/profile/user-1.jpg\", \"alt\", \"Photo of a Shiba Inu\"], [\"matChipAvatar\", \"\", \"src\", \"/assets/images/profile/user-2.jpg\", \"alt\", \"Photo of a Shiba Inu\"], [\"color\", \"accent\", 1, \"f-s-14\"], [\"matChipAvatar\", \"\", \"src\", \"/assets/images/profile/user-3.jpg\", \"alt\", \"Photo of a Shiba Inu\"], [\"cdkDropList\", \"\", \"cdkDropListOrientation\", \"horizontal\", 1, \"example-chip\", 3, \"cdkDropListDropped\"], [\"class\", \"example-box f-s-14\", \"cdkDrag\", \"\", 4, \"ngFor\", \"ngForOf\"], [\"aria-label\", \"Color selection\", 1, \"mat-mdc-chip-set-stacked\"], [\"selected\", \"\", 3, \"color\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-12\"], [\"appearance\", \"outline\", 1, \"w-100\"], [\"aria-label\", \"Enter fruits\"], [\"chipGrid\", \"\"], [\"class\", \"f-s-14\", 3, \"editable\", \"aria-description\", \"removed\", \"edited\", 4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"New fruit...\", 3, \"matChipInputFor\", \"matChipInputSeparatorKeyCodes\", \"matChipInputAddOnBlur\", \"matChipInputTokenEnd\"], [\"cdkDrag\", \"\", 1, \"example-box\", \"f-s-14\"], [\"selected\", \"\", 3, \"color\"], [1, \"f-s-14\", 3, \"editable\", \"aria-description\", \"removed\", \"edited\"], [\"matChipRemove\", \"\"]],\n    template: function AppChipsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"mat-card-header\")(2, \"mat-card-title\", 1);\n        i0.ɵɵtext(3, \"Chips\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"mat-card-content\", 2)(5, \"div\", 3)(6, \"div\", 4)(7, \"mat-card\", 5)(8, \"mat-card-header\")(9, \"mat-card-title\");\n        i0.ɵɵtext(10, \"Basic\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"mat-card-content\", 2)(12, \"mat-chip-listbox\", 6)(13, \"mat-chip-option\", 7);\n        i0.ɵɵtext(14, \"One fish\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mat-chip-option\", 8);\n        i0.ɵɵtext(16, \"Two fish\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-chip-option\", 9);\n        i0.ɵɵtext(18, \"Accent fish\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mat-chip-option\", 10);\n        i0.ɵɵtext(20, \"Warn fish\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(21, \"div\", 4)(22, \"mat-card\", 5)(23, \"mat-card-header\")(24, \"mat-card-title\");\n        i0.ɵɵtext(25, \"Avatar\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"mat-card-content\", 2)(27, \"mat-chip-listbox\", 11)(28, \"mat-chip\", 8);\n        i0.ɵɵelement(29, \"img\", 12);\n        i0.ɵɵtext(30, \" Anderson \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"mat-chip\", 7);\n        i0.ɵɵelement(32, \"img\", 13);\n        i0.ɵɵtext(33, \" Monty \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"mat-chip\", 14);\n        i0.ɵɵelement(35, \"img\", 15);\n        i0.ɵɵtext(36, \" Mathew \");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(37, \"div\", 4)(38, \"mat-card\", 5)(39, \"mat-card-header\")(40, \"mat-card-title\");\n        i0.ɵɵtext(41, \"Drag n Drop\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(42, \"mat-card-content\", 2)(43, \"mat-chip-set\", 16);\n        i0.ɵɵlistener(\"cdkDropListDropped\", function AppChipsComponent_Template_mat_chip_set_cdkDropListDropped_43_listener($event) {\n          return ctx.drop($event);\n        });\n        i0.ɵɵtemplate(44, AppChipsComponent_mat_chip_44_Template, 2, 1, \"mat-chip\", 17);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(45, \"div\", 4)(46, \"mat-card\", 5)(47, \"mat-card-header\")(48, \"mat-card-title\");\n        i0.ɵɵtext(49, \"Stacked \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(50, \"mat-card-content\", 2)(51, \"mat-chip-listbox\", 18);\n        i0.ɵɵtemplate(52, AppChipsComponent_mat_chip_option_52_Template, 2, 2, \"mat-chip-option\", 19);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(53, \"div\", 20)(54, \"mat-card\", 5)(55, \"mat-card-header\")(56, \"mat-card-title\");\n        i0.ɵɵtext(57, \"Input\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(58, \"mat-card-content\", 2)(59, \"mat-form-field\", 21)(60, \"mat-label\");\n        i0.ɵɵtext(61, \"Favorite Fruits\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(62, \"mat-chip-grid\", 22, 23);\n        i0.ɵɵtemplate(64, AppChipsComponent_mat_chip_row_64_Template, 5, 4, \"mat-chip-row\", 24);\n        i0.ɵɵelementStart(65, \"input\", 25);\n        i0.ɵɵlistener(\"matChipInputTokenEnd\", function AppChipsComponent_Template_input_matChipInputTokenEnd_65_listener($event) {\n          return ctx.add($event);\n        });\n        i0.ɵɵelementEnd()()()()()()()()();\n      }\n      if (rf & 2) {\n        const _r2 = i0.ɵɵreference(63);\n        i0.ɵɵadvance(44);\n        i0.ɵɵproperty(\"ngForOf\", ctx.vegetables);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.availableColors);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngForOf\", ctx.fruits);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matChipInputFor\", _r2)(\"matChipInputSeparatorKeyCodes\", ctx.separatorKeysCodes)(\"matChipInputAddOnBlur\", ctx.addOnBlur);\n      }\n    },\n    dependencies: [i1.NgForOf, i2.MatFormField, i2.MatLabel, i3.MatCard, i3.MatCardContent, i3.MatCardHeader, i3.MatCardTitle, i4.MatChip, i4.MatChipAvatar, i4.MatChipGrid, i4.MatChipInput, i4.MatChipListbox, i4.MatChipOption, i4.MatChipRemove, i4.MatChipRow, i4.MatChipSet, i5.MatIcon],\n    styles: [\".example-box.cdk-drag-animating[_ngcontent-%COMP%] {\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n\\n.example-chip[_ngcontent-%COMP%]   .cdk-drop-list-dragging[_ngcontent-%COMP%] {\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvdWktY29tcG9uZW50cy9jaGlwcy9jaGlwcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHNEQUFBO0FBQ0o7O0FBRUE7RUFDSSxzREFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtYm94LmNkay1kcmFnLWFuaW1hdGluZyB7XHJcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMjUwbXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMiwgMSk7XHJcbn1cclxuXHJcbi5leGFtcGxlLWNoaXAgLmNkay1kcm9wLWxpc3QtZHJhZ2dpbmcge1xyXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDI1MG1zIGN1YmljLWJlemllcigwLCAwLCAwLjIsIDEpO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nfunction isDragDrop(object) {\n  return 'previousIndex' in object;\n}","map":{"version":3,"mappings":"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","names":["COMMA","ENTER","moveItemInArray","i0","AppChipsComponent","constructor","name","color","drop","event","isDragDrop","vegetables","previousIndex","currentIndex","add","value","trim","fruits","push","chipInput","clear","remove","fruit","index","indexOf","splice","edit","selectors","decls","vars","consts","template","ctx","object"],"sourceRoot":"","sources":["D:\\sru\\mywork\\modernize-angular-free-v1\\main\\src\\app\\pages\\ui-components\\chips\\chips.component.ts","D:\\sru\\mywork\\modernize-angular-free-v1\\main\\src\\app\\pages\\ui-components\\chips\\chips.component.html"],"sourcesContent":["import { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { Component } from '@angular/core';\r\nimport { MatChipEditedEvent, MatChipInputEvent } from '@angular/material/chips';\r\nimport {ThemePalette} from '@angular/material/core';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\n\r\nexport interface ChipColor {\r\n  name: string;\r\n  color: ThemePalette;\r\n}\r\n\r\nexport interface Fruit {\r\n  name: string;\r\n}\r\n\r\nexport interface Vegetable {\r\n  name: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-chips',\r\n  templateUrl: './chips.component.html',\r\n  styleUrls: ['./chips.component.scss'],\r\n})\r\nexport class AppChipsComponent {\r\n  // drag n drop\r\n  vegetables: Vegetable[] = [\r\n    { name: 'apple' },\r\n    { name: 'banana' },\r\n    { name: 'strawberry' },\r\n    { name: 'orange' },\r\n    { name: 'kiwi' },\r\n    { name: 'cherry' },\r\n  ];\r\n\r\n    // \r\n    // Stacked\r\n    // \r\n    availableColors: ChipColor[] = [\r\n      {name: 'Primary', color: 'primary'},\r\n      {name: 'Accent', color: 'accent'},\r\n      {name: 'Warn', color: 'warn'},\r\n    ];\r\n\r\n\r\n  drop(event: Event) {\r\n    if (isDragDrop(event)) {\r\n      moveItemInArray(this.vegetables, event.previousIndex, event.currentIndex);\r\n    }\r\n  }\r\n\r\n  // \r\n  //  chips with input\r\n  // \r\n  addOnBlur = true;\r\n  readonly separatorKeysCodes = [ENTER, COMMA] as const;\r\n  fruits: Fruit[] = [{ name: 'Lemon' }, { name: 'Lime' }, { name: 'Apple' }];\r\n\r\n  add(event: MatChipInputEvent): void {\r\n    const value = (event.value || '').trim();\r\n\r\n    // Add our fruit\r\n    if (value) {\r\n      this.fruits.push({ name: value });\r\n    }\r\n\r\n    // Clear the input value\r\n    event.chipInput!.clear();\r\n  }\r\n\r\n  remove(fruit: Fruit): void {\r\n    const index = this.fruits.indexOf(fruit);\r\n\r\n    if (index >= 0) {\r\n      this.fruits.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  edit(fruit: Fruit, event: MatChipEditedEvent) {\r\n    const value = event.value.trim();\r\n\r\n    // Remove fruit if it no longer has a name\r\n    if (!value) {\r\n      this.remove(fruit);\r\n      return;\r\n    }\r\n\r\n    // Edit existing fruit\r\n    const index = this.fruits.indexOf(fruit);\r\n    if (index >= 0) {\r\n      this.fruits[index].name = value;\r\n    }\r\n\r\n  \r\n  }\r\n}\r\nfunction isDragDrop(object: any): object is CdkDragDrop<string[]> {\r\n  return 'previousIndex' in object;\r\n}\r\n","<mat-card class=\"cardWithShadow theme-card\">\r\n  <mat-card-header>\r\n    <mat-card-title class=\"m-b-0\">Chips</mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content class=\"b-t-1\">\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-6\">\r\n        <!-- ------------------------------------------------------------------------- -->\r\n        <!-- basic -->\r\n        <!-- ------------------------------------------------------------------------- -->\r\n\r\n        <mat-card class=\"b-1 shadow-none\">\r\n          <mat-card-header>\r\n            <mat-card-title>Basic</mat-card-title>\r\n          </mat-card-header>\r\n          <mat-card-content class=\"b-t-1\">\r\n            <mat-chip-listbox aria-label=\"Fish selection\">\r\n              <mat-chip-option class=\"f-s-14\" color=\"primary\"\r\n                >One fish</mat-chip-option\r\n              >\r\n              <mat-chip-option class=\"f-s-14\">Two fish</mat-chip-option>\r\n              <mat-chip-option class=\"f-s-14\" color=\"accent\" selected\r\n                >Accent fish</mat-chip-option\r\n              >\r\n              <mat-chip-option class=\"f-s-14\" color=\"warn\"\r\n                >Warn fish</mat-chip-option\r\n              >\r\n            </mat-chip-listbox>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n\r\n      <div class=\"col-lg-6\">\r\n        <!-- ------------------------------------------------------------------------- -->\r\n        <!-- avatar -->\r\n        <!-- ------------------------------------------------------------------------- -->\r\n\r\n        <mat-card class=\"b-1 shadow-none\">\r\n          <mat-card-header>\r\n            <mat-card-title>Avatar</mat-card-title>\r\n          </mat-card-header>\r\n          <mat-card-content class=\"b-t-1\">\r\n            <mat-chip-listbox aria-label=\"Dog selection\">\r\n              <mat-chip class=\"f-s-14\">\r\n                <img\r\n                  matChipAvatar\r\n                  src=\"/assets/images/profile/user-1.jpg\"\r\n                  alt=\"Photo of a Shiba Inu\"\r\n                />\r\n                Anderson\r\n              </mat-chip>\r\n              <mat-chip class=\"f-s-14\" color=\"primary\">\r\n                <img\r\n                  matChipAvatar\r\n                  src=\"/assets/images/profile/user-2.jpg\"\r\n                  alt=\"Photo of a Shiba Inu\"\r\n                />\r\n                Monty\r\n              </mat-chip>\r\n              <mat-chip class=\"f-s-14\" color=\"accent\">\r\n                <img\r\n                  matChipAvatar\r\n                  src=\"/assets/images/profile/user-3.jpg\"\r\n                  alt=\"Photo of a Shiba Inu\"\r\n                />\r\n                Mathew\r\n              </mat-chip>\r\n            </mat-chip-listbox>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n\r\n      <div class=\"col-lg-6\">\r\n        <!-- ------------------------------------------------------------------------- -->\r\n        <!-- Drag n Drop -->\r\n        <!-- ------------------------------------------------------------------------- -->\r\n\r\n        <mat-card class=\"b-1 shadow-none\">\r\n          <mat-card-header>\r\n            <mat-card-title>Drag n Drop</mat-card-title>\r\n          </mat-card-header>\r\n          <mat-card-content class=\"b-t-1\">\r\n            <mat-chip-set\r\n              class=\"example-chip\"\r\n              cdkDropList\r\n              cdkDropListOrientation=\"horizontal\"\r\n              (cdkDropListDropped)=\"drop($event)\"\r\n            >\r\n              <mat-chip\r\n                class=\"example-box f-s-14\"\r\n                cdkDrag\r\n                *ngFor=\"let vegetable of vegetables\"\r\n              >\r\n                {{ vegetable.name }}\r\n              </mat-chip>\r\n            </mat-chip-set>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n\r\n      <div class=\"col-lg-6\">\r\n        <!-- ------------------------------------------------------------------------- -->\r\n        <!-- Stacked  -->\r\n        <!-- ------------------------------------------------------------------------- -->\r\n        <mat-card class=\"b-1 shadow-none\">\r\n          <mat-card-header>\r\n            <mat-card-title>Stacked </mat-card-title>\r\n          </mat-card-header>\r\n          <mat-card-content class=\"b-t-1\">\r\n            <mat-chip-listbox class=\"mat-mdc-chip-set-stacked\" aria-label=\"Color selection\">\r\n              <mat-chip-option *ngFor=\"let chip of availableColors\" selected [color]=\"chip.color\">\r\n                {{chip.name}}\r\n              </mat-chip-option>\r\n            </mat-chip-listbox>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n\r\n      <div class=\"col-12\">\r\n        <!-- ------------------------------------------------------------------------- -->\r\n        <!-- Input -->\r\n        <!-- ------------------------------------------------------------------------- -->\r\n\r\n        <mat-card class=\"b-1 shadow-none\">\r\n          <mat-card-header>\r\n            <mat-card-title>Input</mat-card-title>\r\n          </mat-card-header>\r\n          <mat-card-content class=\"b-t-1\">\r\n            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n              <mat-label>Favorite Fruits</mat-label>\r\n              <mat-chip-grid #chipGrid aria-label=\"Enter fruits\">\r\n                <mat-chip-row\r\n                  *ngFor=\"let fruit of fruits\"\r\n                  (removed)=\"remove(fruit)\"\r\n                  [editable]=\"true\"\r\n                  (edited)=\"edit(fruit, $event)\"\r\n                  [aria-description]=\"'press enter to edit ' + fruit.name\" class=\"f-s-14\"\r\n                >\r\n                  {{ fruit.name }}\r\n                  <button\r\n                    matChipRemove\r\n                    [attr.aria-label]=\"'remove ' + fruit.name\"\r\n                  >\r\n                    <mat-icon>cancel</mat-icon>\r\n                  </button>\r\n                </mat-chip-row>\r\n                <input\r\n                  placeholder=\"New fruit...\"\r\n                  [matChipInputFor]=\"chipGrid\"\r\n                  [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                  [matChipInputAddOnBlur]=\"addOnBlur\"\r\n                  (matChipInputTokenEnd)=\"add($event)\"\r\n                />\r\n              </mat-chip-grid>\r\n            </mat-form-field>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n    </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}