{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/material/button\";\nfunction AppSamplePageComponent_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function AppSamplePageComponent_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.goToViewPage());\n    });\n    i0.ɵɵtext(1, \" View \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppSamplePageComponent_video_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"video\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r1.url, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class AppSamplePageComponent {\n  constructor(router) {\n    this.router = router;\n    this.uploadedVideoFile = new EventEmitter();\n    this.showVBtn = false;\n  }\n  ngOnInit() {}\n  onSelectFile(event) {\n    const file = event.target.files && event.target.files[0];\n    if (file) {\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n      if (file.type.indexOf('image') > -1) {\n        this.format = 'image';\n      } else if (file.type.indexOf('video') > -1) {\n        this.format = 'video';\n      }\n      reader.onload = event => {\n        this.url = event.target.result;\n        this.showVBtn = true;\n      };\n    }\n  }\n  goToViewPage() {\n    console.log(this.url);\n    return;\n    this.uploadedVideoFile.emit(this.url);\n    this.router.navigate(['extra/view-video']);\n  }\n  static #_ = this.ɵfac = function AppSamplePageComponent_Factory(t) {\n    return new (t || AppSamplePageComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppSamplePageComponent,\n    selectors: [[\"app-sample-page\"]],\n    outputs: {\n      uploadedVideoFile: \"uploadedVideoFile\"\n    },\n    decls: 5,\n    vars: 2,\n    consts: [[1, \"cardWithShadow\"], [\"type\", \"file\", 3, \"change\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", 3, \"click\", 4, \"ngIf\"], [\"height\", \"200\", \"controls\", \"\", 3, \"src\", 4, \"ngIf\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"height\", \"200\", \"controls\", \"\", 3, \"src\"]],\n    template: function AppSamplePageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"mat-card-content\")(2, \"input\", 1);\n        i0.ɵɵlistener(\"change\", function AppSamplePageComponent_Template_input_change_2_listener($event) {\n          return ctx.onSelectFile($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, AppSamplePageComponent_button_3_Template, 2, 0, \"button\", 2);\n        i0.ɵɵtemplate(4, AppSamplePageComponent_video_4_Template, 1, 1, \"video\", 3);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.showVBtn);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.format === \"video\" && ctx.url);\n      }\n    },\n    dependencies: [i2.NgIf, i3.MatCard, i3.MatCardContent, i4.MatButton],\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAwB,eAAe;;;;;;;;;ICMjEC,iCAAkF;IAAzBA;MAAAA;MAAA;MAAA,OAASA,oCAAc;IAAA,EAAC;IAC/EA,sBACF;IAAAA,iBAAS;;;;;IACTA,2BAAiF;;;;IAA1EA,kDAAW;;;ADFxB,OAAM,MAAOC,sBAAsB;EAKjCC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;IAFhB,sBAAiB,GAAG,IAAIJ,YAAY,EAAE;IAChD,aAAQ,GAAG,KAAK;EACsB;EAEtCK,QAAQ,IACR;EAEAC,YAAY,CAACC,KAAU;IACrB,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,IAAIH,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACxD,IAAIF,IAAI,EAAE;MACR,IAAIG,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC7BD,MAAM,CAACE,aAAa,CAACL,IAAI,CAAC;MAC1B,IAAGA,IAAI,CAACM,IAAI,CAACC,OAAO,CAAC,OAAO,CAAC,GAAE,CAAC,CAAC,EAAC;QAChC,IAAI,CAACC,MAAM,GAAG,OAAO;OACtB,MAAM,IAAGR,IAAI,CAACM,IAAI,CAACC,OAAO,CAAC,OAAO,CAAC,GAAE,CAAC,CAAC,EAAC;QACvC,IAAI,CAACC,MAAM,GAAG,OAAO;;MAEvBL,MAAM,CAACM,MAAM,GAAIV,KAAK,IAAI;QACxB,IAAI,CAACW,GAAG,GAAgBX,KAAK,CAACE,MAAO,CAACU,MAAM;QAC5C,IAAI,CAACC,QAAQ,GAAG,IAAI;MACtB,CAAC;;EAEL;EAEAC,YAAY;IACVC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,GAAG,CAAC;IACrB;IACA,IAAI,CAACM,iBAAiB,CAACC,IAAI,CAAC,IAAI,CAACP,GAAG,CAAC;IACrC,IAAI,CAACd,MAAM,CAACsB,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;EAC5C;EAAC;qBAhCUxB,sBAAsB;EAAA;EAAA;UAAtBA,sBAAsB;IAAAyB;IAAAC;MAAAJ;IAAA;IAAAK;IAAAC;IAAAC;IAAAC;MAAA;QCJnC/B,mCAAiC;QAERA;UAAA,OAAUgC,wBAAoB;QAAA,EAAC;QAAlDhC,iBAAqD;QACrDA,6EAES;QACTA,2EAAiF;QAGnFA,iBAAmB;;;QANwBA,eAAc;QAAdA,mCAAc;QAGnCA,eAA6B;QAA7BA,wDAA6B","names":["EventEmitter","i0","AppSamplePageComponent","constructor","router","ngOnInit","onSelectFile","event","file","target","files","reader","FileReader","readAsDataURL","type","indexOf","format","onload","url","result","showVBtn","goToViewPage","console","log","uploadedVideoFile","emit","navigate","selectors","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\sru\\mywork\\modernize-angular-free-v1\\main\\src\\app\\pages\\extra\\sample-page\\sample-page.component.ts","D:\\sru\\mywork\\modernize-angular-free-v1\\main\\src\\app\\pages\\extra\\sample-page\\sample-page.component.html"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-sample-page',\r\n  templateUrl: './sample-page.component.html'\r\n})\r\nexport class AppSamplePageComponent implements OnInit {\r\n  url: string | ArrayBuffer | null;\r\n  format: string;\r\n  @Output() uploadedVideoFile = new EventEmitter();\r\n  showVBtn = false;\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSelectFile(event: any) {\r\n    const file = event.target.files && event.target.files[0];\r\n    if (file) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      if(file.type.indexOf('image')> -1){\r\n        this.format = 'image';\r\n      } else if(file.type.indexOf('video')> -1){\r\n        this.format = 'video';\r\n      }\r\n      reader.onload = (event) => {\r\n        this.url = (<FileReader>event.target).result;\r\n        this.showVBtn = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  goToViewPage(){\r\n    console.log(this.url);\r\n    return;\r\n    this.uploadedVideoFile.emit(this.url);\r\n    this.router.navigate(['extra/view-video']);\r\n  }\r\n\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- Simple four boxes Row -->\r\n<!-- ============================================================== -->\r\n<mat-card class=\"cardWithShadow\">\r\n    <mat-card-content>\r\n      <input type='file' (change)=\"onSelectFile($event)\" />\r\n      <button mat-flat-button color=\"primary\" *ngIf=\"showVBtn\" (click)=\"goToViewPage()\">\r\n        View\r\n      </button>\r\n      <video [src]=\"url\" *ngIf=\"format==='video' && url\" height=\"200\" controls></video>\r\n      <!-- <mat-card-title>Sample Page</mat-card-title>\r\n      <mat-card-subtitle class=\"mat-body-1\">This is test page</mat-card-subtitle> -->\r\n    </mat-card-content>\r\n  </mat-card>\r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}