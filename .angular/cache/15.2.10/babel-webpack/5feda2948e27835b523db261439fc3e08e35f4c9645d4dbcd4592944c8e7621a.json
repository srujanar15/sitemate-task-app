{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nconst MOBILE_VIEW = 'screen and (max-width: 768px)';\nconst TABLET_VIEW = 'screen and (min-width: 769px) and (max-width: 1024px)';\nconst MONITOR_VIEW = 'screen and (min-width: 1024px)';\nlet FullComponent = class FullComponent {\n  constructor(breakpointObserver) {\n    this.breakpointObserver = breakpointObserver;\n    //get options from service\n    this.layoutChangesSubscription = Subscription.EMPTY;\n    this.isMobileScreen = false;\n    this.isContentWidthFixed = true;\n    this.isCollapsedWidthFixed = false;\n    this.htmlElement = document.querySelector('html');\n    this.layoutChangesSubscription = this.breakpointObserver.observe([MOBILE_VIEW, TABLET_VIEW, MONITOR_VIEW]).subscribe(state => {\n      // SidenavOpened must be reset true when layout changes\n      this.isMobileScreen = state.breakpoints[MOBILE_VIEW];\n      this.isContentWidthFixed = state.breakpoints[MONITOR_VIEW];\n    });\n  }\n  get isOver() {\n    return this.isMobileScreen;\n  }\n  ngOnInit() {}\n  ngOnDestroy() {\n    this.layoutChangesSubscription.unsubscribe();\n  }\n  toggleCollapsed() {\n    this.isContentWidthFixed = false;\n  }\n  onSidenavClosedStart() {\n    this.isContentWidthFixed = false;\n  }\n  onSidenavOpenedChange(isOpened) {\n    this.isCollapsedWidthFixed = this.isOver;\n  }\n};\n__decorate([ViewChild('leftsidenav')], FullComponent.prototype, \"sidenav\", void 0);\nFullComponent = __decorate([Component({\n  selector: 'app-full',\n  templateUrl: './full.component.html',\n  styleUrls: []\n})], FullComponent);\nexport { FullComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,EAAUC,SAAS,QAAQ,eAAe;AAC5D,SAASC,YAAY,QAAQ,MAAM;AAGnC,MAAMC,WAAW,GAAG,+BAA+B;AACnD,MAAMC,WAAW,GAAG,uDAAuD;AAC3E,MAAMC,YAAY,GAAG,gCAAgC;AAO9C,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAgBxBC,YAAoBC,kBAAsC;IAAtC,uBAAkB,GAAlBA,kBAAkB;IAXtC;IACQ,8BAAyB,GAAGN,YAAY,CAACO,KAAK;IAC9C,mBAAc,GAAG,KAAK;IACtB,wBAAmB,GAAG,IAAI;IAC1B,0BAAqB,GAAG,KAAK;IAQnC,IAAI,CAACC,WAAW,GAAGC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAE;IAClD,IAAI,CAACC,yBAAyB,GAAG,IAAI,CAACL,kBAAkB,CACrDM,OAAO,CAAC,CAACX,WAAW,EAAEC,WAAW,EAAEC,YAAY,CAAC,CAAC,CACjDU,SAAS,CAAEC,KAAK,IAAI;MACnB;MAEA,IAAI,CAACC,cAAc,GAAGD,KAAK,CAACE,WAAW,CAACf,WAAW,CAAC;MAEpD,IAAI,CAACgB,mBAAmB,GAAGH,KAAK,CAACE,WAAW,CAACb,YAAY,CAAC;IAC5D,CAAC,CAAC;EACN;EAfA,IAAIe,MAAM;IACR,OAAO,IAAI,CAACH,cAAc;EAC5B;EAeAI,QAAQ,IAAU;EAElBC,WAAW;IACT,IAAI,CAACT,yBAAyB,CAACU,WAAW,EAAE;EAC9C;EAEAC,eAAe;IACb,IAAI,CAACL,mBAAmB,GAAG,KAAK;EAClC;EAEAM,oBAAoB;IAClB,IAAI,CAACN,mBAAmB,GAAG,KAAK;EAClC;EAEAO,qBAAqB,CAACC,QAAiB;IACrC,IAAI,CAACC,qBAAqB,GAAG,IAAI,CAACR,MAAM;EAC1C;CACD;AA3CCS,YADC5B,SAAS,CAAC,aAAa,CAAC,8CACE;AAHhBK,aAAa,eALzBN,SAAS,CAAC;EACT8B,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE;CACZ,CAAC,GACW1B,aAAa,CA8CzB;SA9CYA,aAAa","names":["Component","ViewChild","Subscription","MOBILE_VIEW","TABLET_VIEW","MONITOR_VIEW","FullComponent","constructor","breakpointObserver","EMPTY","htmlElement","document","querySelector","layoutChangesSubscription","observe","subscribe","state","isMobileScreen","breakpoints","isContentWidthFixed","isOver","ngOnInit","ngOnDestroy","unsubscribe","toggleCollapsed","onSidenavClosedStart","onSidenavOpenedChange","isOpened","isCollapsedWidthFixed","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\sru\\mywork\\modernize-angular-free-v1\\main\\src\\app\\layouts\\full\\full.component.ts"],"sourcesContent":["import { BreakpointObserver } from '@angular/cdk/layout';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\n\r\nconst MOBILE_VIEW = 'screen and (max-width: 768px)';\r\nconst TABLET_VIEW = 'screen and (min-width: 769px) and (max-width: 1024px)';\r\nconst MONITOR_VIEW = 'screen and (min-width: 1024px)';\r\n\r\n@Component({\r\n  selector: 'app-full',\r\n  templateUrl: './full.component.html',\r\n  styleUrls: [],\r\n})\r\nexport class FullComponent implements OnInit {\r\n\r\n  @ViewChild('leftsidenav')\r\n  public sidenav: MatSidenav;\r\n\r\n  //get options from service\r\n  private layoutChangesSubscription = Subscription.EMPTY;\r\n  private isMobileScreen = false;\r\n  private isContentWidthFixed = true;\r\n  private isCollapsedWidthFixed = false;\r\n  private htmlElement!: HTMLHtmlElement;\r\n\r\n  get isOver(): boolean {\r\n    return this.isMobileScreen;\r\n  }\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver) {\r\n    this.htmlElement = document.querySelector('html')!;\r\n    this.layoutChangesSubscription = this.breakpointObserver\r\n      .observe([MOBILE_VIEW, TABLET_VIEW, MONITOR_VIEW])\r\n      .subscribe((state) => {\r\n        // SidenavOpened must be reset true when layout changes\r\n\r\n        this.isMobileScreen = state.breakpoints[MOBILE_VIEW];\r\n\r\n        this.isContentWidthFixed = state.breakpoints[MONITOR_VIEW];\r\n      });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngOnDestroy() {\r\n    this.layoutChangesSubscription.unsubscribe();\r\n  }\r\n\r\n  toggleCollapsed() {\r\n    this.isContentWidthFixed = false;\r\n  }\r\n\r\n  onSidenavClosedStart() {\r\n    this.isContentWidthFixed = false;\r\n  }\r\n\r\n  onSidenavOpenedChange(isOpened: boolean) {\r\n    this.isCollapsedWidthFixed = this.isOver;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}